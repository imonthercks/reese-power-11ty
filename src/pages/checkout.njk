---
title: Checkout
layout: page.njk
templateEngineOverride: md, njk
---
<style>
  .simple-flex-container {
    display: flex;
    flex-flow: row;
  }

  .triple {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
  }

  .triple-column {
    flex: 0 32%;
  }

  .event-column-left {
    flex: 49%;
    text-align: right;
  }

  .event-column-left img {
    display: inline;
    margin-right: 10px;
    margin-bottom: 10px;
  }

  .event-column-right {
    flex: 49%;
    margin-left: 15px;
  }

  /* Style inputs, select elements and textareas */
  input[type=text], input[type=email], select, textarea{
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    resize: vertical;
  }

  /* Style the label to display next to the inputs */
  label {
    padding: 12px 12px 12px 0;
    display: inline-block;
  }

  /* Floating column for labels: 25% width */
  .form-label {
    float: left;
    width: 25%;
    margin-top: 6px;
  }

  /* Floating column for inputs: 75% width */
  .form-field {
    float: left;
    width: 75%;
    margin-top: 6px;
  }

  /* Clear floats after the columns */
  .form-row:after {
    content: "";
    display: table;
    clear: both;
  }

  @media screen and (max-width: 700px) {
    .simple-flex-container {
      flex-direction: column;
    }

    .event-column-left, .event-column-right {   
      flex: 100%;
      text-align: left;
      max-width: 100%;
    }

    .triple {
      flex-direction: column;
      overflow-x: auto
    }

    .triple-column {
      flex: 100%;
      padding-bottom: 15px;
    }

    .form-label, .form-field, input[type=submit] {
      width: 100%;
      margin-top: 0;
    }

    input[type=radio], input[type=checkbox] {
      margin-bottom: 20px;
    }
  }

</style>
<script>
      const getOrderText = () => {
        var ordertext = "QTY  Product                                 Price      Subtotal\n";
        cartLS.list().forEach((item) => {
          ordertext += item.quantity.toString().padEnd(5,' ') + item.name.padEnd(40, ' ') + "$" + item.price.toString().padStart(4, ' ') + ".00" + "   $" + cartLS.subtotal(item).toString().padStart(4, ' ') + ".00" + "\n"
        })
        
        var addShipping = document.getElementById("ship").checked;
        if (addShipping){
          ordertext += '     Shipping '.padEnd(39,' ') + "                 $   5.00\n"
        }

        ordertext += "=====================================================================\n";
        var total = cartLS.total();
        ordertext += "              Total:  $" + (addShipping ? total + 5 : total).toString().padStart(4, ' ') + ".00";

        return ordertext;
      }

      const writeOrderText = (text) => {
        document.getElementById("ordertext").textContent = text;
        paypalInstructions = document.getElementById("paypal-instructions");
        paypalChecked = document.getElementById("payment-paypal").checked;
        paypalInstructions.style.display = paypalChecked ? "block" : "none";
      }

      const getRandomInt = (max) => {
        return Math.floor(Math.random() * Math.floor(max));
      }

      document.addEventListener("DOMContentLoaded", function(event) {
        writeOrderText(getOrderText());
      });

      const validateForm = () => {
        var ship = document.getElementById("ship").checked;
        var pickup = document.getElementById("pickup").checked;

        console.log(ship)
        console.log(pickup)
        if (!ship && !pickup)
          return {valid: false, msg: "Please choose a delivery option"};

        if (ship){
          var address = document.getElementById("address").value;
          if (address.length < 5)
            return {valid: false, msg: "Please enter an address"};
        }

        if (pickup){
          var pickupfrom = document.getElementById("pickupfrom");
          if (pickupfrom.selectedIndex == "0")
            return {valid: false, msg: "Please select a location to pickup your order"};
        }

        return {valid: true, msg: "Successful validation"};
      }

      const submitForm = () => {

        var validation = validateForm();
        if (!validation.valid){
          alert(validation.msg);
          return false;
        }

        document.getElementById("order").value = getOrderText();
        var now = new Date();
        var orderNumber = now.getYear().toString() + now.getMonth().toString().padStart(2, '0') + now.getDate().toString().padStart(2, '0') + getRandomInt(99).toString().padStart(2, '0');
        document.getElementById("orderNumber").value = orderNumber;
        localStorage.setItem("orderNumber", JSON.stringify({orderNumber: orderNumber}));
        
        return true;
      }

      const clearCart = () => {
        cartLS.destroy();
        writeOrderText(getOrderText());
        updateCartCount();
        return false;
      }
</script>
<form name="checkout" method="POST" netlify-honeypot="important-field" data-netlify="true" action="/checkout_complete">
  <div class="triple">
    <div class="event-column-left">
      <div class="form-row">
        <div class="form-label">
          <label for="name">Your Name:</label>
        </div>
        <div class="form-field">
          <input type="text" id="name" name="name" placeholder="Your name.." required>
        </div>
      </div>
      <div class="form-row">
        <div class="form-label">
          <label for="email">Your Email:</label>
        </div>
        <div class="form-field">
          <input type="email" id="email" name="email" placeholder="Your email address.." required>
        </div>
      </div>
      <div class="form-row">
        <div class="form-label">
          <label for="phone">Your Phone:</label>
        </div>
        <div class="form-field">
          <input type="text" id="phone" name="phone" placeholder="Your phone number..">
        </div>
      </div>
      <div class="form-row">
        <div class="form-label">
          <label for="paymenttype">Delivery:</label>
        </div>
        <div class="form-field" style="text-align: left; padding-top: 10px;">
          <input type="radio" id="pickup" name="delivery" value="pickup" onclick="writeOrderText(getOrderText())" />
          <label for="pickup">Pick up from</label>
          <select name="pickupfrom" id="pickupfrom">
            <option value="">Choose a location</option>
            <option value="derby">Derby, KS</option>
            <option value="emporia">Emporia, KS</option>
            <option value="overland park">Overland Park (KC), KS</option>
            <option value="wichita">Wichita, KS</option>
            <option value="rose hill">Rose Hill, KS</option>
          </select> <br /><br />
          <input type="radio" id="ship" name="delivery" value="ship" onclick="writeOrderText(getOrderText())" />
          <label for="ship">Ship to me for $5.00</label><br />
          <textarea name="address" id="address" placeholder="Put your address here"></textarea>
        </div>
      </div>
      <div class="form-row">
        <div class="form-label">
          <label for="paymenttype">Payment:</label>
        </div>
        <div class="form-field" style="text-align: left; padding-top: 10px;">
          <input type="radio" id="payment-paypal" name="paymenttype" value="paypal" onclick="writeOrderText(getOrderText())" checked/><label for="payment-paypal">Invoice me through PayPal</label><br />
          <div id="paypal-instructions" style="text-align: center; background: #fff; border: gray 1px solid; padding: 10px; margin: 5px 5px 20px 5px;"><em>
          You should recieve an invoice within the next few days from service@paypal.org that looks similar to the below image:</em><br />
          {% Image "./src/images/paypal_example.png", "example paypal invoice", "png" %} <br />
          </div>
          <input type="radio" id="payment-call" name="paymenttype" value="call" onclick="writeOrderText(getOrderText())" /><label for="payment-call">Contact me for payment</label>
        </div>
      </div>
      <div class="form-row">
        <div class="form-label">
          <label for="phone">Comments:</label>
        </div>
        <div class="form-field">
          <textarea id="comments" name="comments"></textarea>
        </div>
      </div>
    </div>
    <div class="event-column-right">
      <button type="submit" onclick="return submitForm()" class="tdbc-button" unsafe-inline>Submit</button>&nbsp;&nbsp;<button onclick="return clearCart()" class="tdbc-button">Clear Shopping Cart</button>
      <pre id="ordertext">
      </pre>
    </div>
  </div>
  <p class="hidden">
    <label>Don’t fill this out if you’re human: <input name="important-field" /></label>
    <textarea id="order" name="order"></textarea>
    <input type="text" id="orderNumber" name="orderNumber" />
  </p>
</form>
